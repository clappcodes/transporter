{
  "version": 3,
  "sources": ["../../utils/DeferredPromise.ts", "../../transport/handle.ts"],
  "sourcesContent": ["export class DeferredPromise<T> extends Promise<T> {\n  declare resolve: (value: T) => void;\n  declare reject: (reason?: unknown) => void;\n  resolved: any;\n\n  constructor(\n    resolver?: (\n      resolve: (value: T) => void,\n      reject: (reason?: unknown) => void,\n    ) => void,\n  ) {\n    const that = {};\n    super(function (resolve, reject) {\n      Object.assign(that, { resolve, reject });\n    });\n    Object.assign(this, that);\n    if (resolver) {\n      resolver(this.resolve, this.reject);\n    }\n  }\n}\n", "import type { RequestHandler } from \"../types.ts\";\nimport { DeferredPromise } from \"../utils/DeferredPromise.ts\";\n\nexport function duplex(\n  handler: RequestHandler,\n): RequestHandler {\n  const pmap = new Map<string, DeferredPromise<Response>>();\n  Object.assign(globalThis, { pmap });\n\n  return function duplexFetch(request) {\n    const id = request.headers.get(\"duplex-stream\");\n\n    if (id && !pmap.has(id)) {\n      pmap.set(id, new DeferredPromise());\n    }\n\n    if (request.body) {\n      console.log(id);\n\n      if (id) {\n        Promise.resolve(handler(request)).then(pmap.get(id)!.resolve);\n\n        return new Promise((resolve, reject) => {\n          Object.assign(request, { resolve, reject });\n        });\n      }\n      // full duplex\n      return handler(request);\n    } else if (id) {\n      request.signal.addEventListener(\"abort\", (e) => {\n        pmap.delete(id);\n        console.log(\"(signal)\", request.method, id);\n      });\n\n      // half dulex - get\n      return pmap.get(id)!;\n    }\n\n    return handler(request);\n  };\n}\n"],
  "mappings": ";;;;AAAO,IAAM,kBAAN,cAAiC,QAAW;AAAA,EAAnD,OAAmD;AAAA;AAAA;AAAA,EAGjD;AAAA,EAEA,YACE,UAIA;AACA,UAAM,OAAO,CAAC;AACd,UAAM,SAAU,SAAS,QAAQ;AAC/B,aAAO,OAAO,MAAM,EAAE,SAAS,OAAO,CAAC;AAAA,IACzC,CAAC;AACD,WAAO,OAAO,MAAM,IAAI;AACxB,QAAI,UAAU;AACZ,eAAS,KAAK,SAAS,KAAK,MAAM;AAAA,IACpC;AAAA,EACF;AACF;;;ACjBO,SAAS,OACd,SACgB;AAChB,QAAM,OAAO,oBAAI,IAAuC;AACxD,SAAO,OAAO,YAAY,EAAE,KAAK,CAAC;AAElC,SAAO,gCAAS,YAAY,SAAS;AACnC,UAAM,KAAK,QAAQ,QAAQ,IAAI,eAAe;AAE9C,QAAI,MAAM,CAAC,KAAK,IAAI,EAAE,GAAG;AACvB,WAAK,IAAI,IAAI,IAAI,gBAAgB,CAAC;AAAA,IACpC;AAEA,QAAI,QAAQ,MAAM;AAChB,cAAQ,IAAI,EAAE;AAEd,UAAI,IAAI;AACN,gBAAQ,QAAQ,QAAQ,OAAO,CAAC,EAAE,KAAK,KAAK,IAAI,EAAE,EAAG,OAAO;AAE5D,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,iBAAO,OAAO,SAAS,EAAE,SAAS,OAAO,CAAC;AAAA,QAC5C,CAAC;AAAA,MACH;AAEA,aAAO,QAAQ,OAAO;AAAA,IACxB,WAAW,IAAI;AACb,cAAQ,OAAO,iBAAiB,SAAS,CAAC,MAAM;AAC9C,aAAK,OAAO,EAAE;AACd,gBAAQ,IAAI,YAAY,QAAQ,QAAQ,EAAE;AAAA,MAC5C,CAAC;AAGD,aAAO,KAAK,IAAI,EAAE;AAAA,IACpB;AAEA,WAAO,QAAQ,OAAO;AAAA,EACxB,GA9BO;AA+BT;AArCgB;",
  "names": []
}
